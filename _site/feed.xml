<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="kr"><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" hreflang="kr" /><updated>2019-09-09T16:17:30+09:00</updated><id>http://0.0.0.0:4000/</id><title type="html">황효진 블로그</title><subtitle>^^7
</subtitle><author><name>황효진</name><email>hhjin1814@gmail.com</email></author><entry><title type="html">python virtualenv</title><link href="http://0.0.0.0:4000/2019/09/09/docker_flask.html" rel="alternate" type="text/html" title="python virtualenv" /><published>2019-09-09T00:00:00+09:00</published><updated>2019-09-09T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2019/09/09/docker_flask</id><content type="html" xml:base="http://0.0.0.0:4000/2019/09/09/docker_flask.html">&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;
&lt;p&gt;virtualenv 는 파이썬 라이브러리를 독립적으로 만들어 줄 수 있는 라이브러리이다.&lt;/p&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pip install virtualenv
Collecting virtualenv
  Using cached https://files.pythonhosted.org/packages/8b/12/8d4f45b8962b03ac9efefe5ed5053f6b29334d83e438b4fe379d21c0cb8e/virtualenv-16.7.5-py2.py3-none-any.whl
Installing collected packages: virtualenv
Successfully installed virtualenv-16.7.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;virtualenv-환경-설치&quot;&gt;virtualenv 환경 설치&lt;/h2&gt;
&lt;p&gt;터미널에 &lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv env&lt;/code&gt; 를 입력하면 현재 폴더에 env폴더가 생성된다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ virtualenv env
Using base prefix '/Library/Frameworks/Python.framework/Versions/3.7'
New python executable in /Users/hwanghyojin/Documents/flask/makeservay/env/bin/python3
Also creating executable in /Users/hwanghyojin/Documents/flask/makeservay/env/bin/python
Installing setuptools, pip, wheel...
done.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;virtualenv-환경-실행&quot;&gt;virtualenv 환경 실행&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source env/bin/activate&lt;/code&gt; 명령어를 실행하면 virtualenv 가상 환경에서 작업을 진행할 수 있다.
bash 뒤에 (env)가 붙으면 가상 환경이 동작중이라는 표시이다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ source env/bin/activate
(env) $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;virtualenv-환경-종료&quot;&gt;virtualenv 환경 종료&lt;/h2&gt;
&lt;p&gt;virtualenv 가상 환경이 실행 중일 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;deactivate&lt;/code&gt; 명령어를 입력하면 가상 환경에서 나와 local 환경에서 작업할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(env) $ deactivate
$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>황효진</name><email>hhjin1814@gmail.com</email></author><category term="python" /><summary type="html">개요 virtualenv 는 파이썬 라이브러리를 독립적으로 만들어 줄 수 있는 라이브러리이다. 설치 $ pip install virtualenv Collecting virtualenv Using cached https://files.pythonhosted.org/packages/8b/12/8d4f45b8962b03ac9efefe5ed5053f6b29334d83e438b4fe379d21c0cb8e/virtualenv-16.7.5-py2.py3-none-any.whl Installing collected packages: virtualenv Successfully installed virtualenv-16.7.5 virtualenv 환경 설치 터미널에 virtualenv env 를 입력하면 현재 폴더에 env폴더가 생성된다. $ virtualenv env Using base prefix '/Library/Frameworks/Python.framework/Versions/3.7' New python executable in /Users/hwanghyojin/Documents/flask/makeservay/env/bin/python3 Also creating executable in /Users/hwanghyojin/Documents/flask/makeservay/env/bin/python Installing setuptools, pip, wheel... done. virtualenv 환경 실행 source env/bin/activate 명령어를 실행하면 virtualenv 가상 환경에서 작업을 진행할 수 있다. bash 뒤에 (env)가 붙으면 가상 환경이 동작중이라는 표시이다. $ source env/bin/activate (env) $ virtualenv 환경 종료 virtualenv 가상 환경이 실행 중일 때 deactivate 명령어를 입력하면 가상 환경에서 나와 local 환경에서 작업할 수 있다. (env) $ deactivate $</summary></entry><entry><title type="html">Date() 변수 정각으로 초기화</title><link href="http://0.0.0.0:4000/2019/08/16/swift.html" rel="alternate" type="text/html" title="Date() 변수 정각으로 초기화" /><published>2019-08-16T00:00:00+09:00</published><updated>2019-08-16T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2019/08/16/swift</id><content type="html" xml:base="http://0.0.0.0:4000/2019/08/16/swift.html">&lt;div class=&quot;hero&quot; style=&quot;background-color: #ccc;&quot;&gt;
  &lt;div class=&quot;hero__content&quot;&gt;
    &lt;!-- &lt;h3&gt;Date() 변수 정각으로 초기화&lt;/h3&gt; --&gt;
    &lt;p&gt;`Date()` 함수의 timeIntervalSinceNow 에 원하는 시간을 입력하면 입력한 시간만큼 현재 시간 이후의 시간을 변수에 입력할 수 있다.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;warning highlighter-rouge&quot;&gt;m+1분 s초&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;resetTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;timeIntervalSinceNow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TimeInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p class=&quot;warning&quot;&gt;’ m+1분 s초’ 로 초기화 할 수 있다.&lt;/p&gt;

&lt;p&gt;위 방법은 다음 분의 현재 초가 저장된다.
아래 방법을 이용하면 지저분한 다음 분의 현재 초로 저장 되는 것 을 0초로 저장 할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;success highlighter-rouge&quot;&gt;m+1분 0초&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;resetTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;timeIntervalSinceNow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TimeInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dateComponents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p class=&quot;success&quot;&gt;’ m+1분 0초 ‘ 로 초기화 할 수 있다.&lt;/p&gt;</content><author><name>황효진</name><email>hhjin1814@gmail.com</email></author><category term="Swift" /><summary type="html">`Date()` 함수의 timeIntervalSinceNow 에 원하는 시간을 입력하면 입력한 시간만큼 현재 시간 이후의 시간을 변수에 입력할 수 있다. m+1분 s초 resetTime = Date(timeIntervalSinceNow: TimeInterval(60)) ’ m+1분 s초’ 로 초기화 할 수 있다. 위 방법은 다음 분의 현재 초가 저장된다. 아래 방법을 이용하면 지저분한 다음 분의 현재 초로 저장 되는 것 을 0초로 저장 할 수 있다. m+1분 0초 resetTime = Date( timeIntervalSinceNow: TimeInterval( 60 - Calendar.current.dateComponents([.second], from: Date()).second! ) ) ’ m+1분 0초 ‘ 로 초기화 할 수 있다.</summary></entry><entry><title type="html">구글 서버상태 대시보드</title><link href="http://0.0.0.0:4000/2019/03/19/gcp.html" rel="alternate" type="text/html" title="구글 서버상태 대시보드" /><published>2019-03-19T00:00:00+09:00</published><updated>2019-03-19T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2019/03/19/gcp</id><content type="html" xml:base="http://0.0.0.0:4000/2019/03/19/gcp.html">&lt;p&gt;&lt;a href=&quot;https://www.google.com/appsstatus#hl=ko&quot;&gt;G Suite 상태 대시보드 페이지&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;

&lt;p&gt;우리 사무실은 지스윗 서비스를 통해 구글 서버에서 아웃룩 앱으로 메일을 받고 있다. 그런데 어느날 출근해보니 imap 메일서버로 로그인이 안되고, 메일도 보내고 받을 수 없는 상태길래 이런방법 저런방법으로 고치려고 노력해보다 안되서 구글에 연락해 보았다.&lt;/p&gt;

&lt;p&gt;굉장히 오랜 시간동안 수신음을 기다려서(다른 사무실에서도 같은 문제로 고통받는 사람들이 많았나보다…) 서비스직원과 통화를 해서 듣기로는, 구글 서버쪽에서의 문제라고 안내받았다. 해결이 되면 바로 메일로 연락준다는 안내와 함께 전화를 끊고, 문의 생성 메일을 확인해보니 어떤 &lt;a href=&quot;https://www.google.com/appsstatus#hl=ko&quot;&gt;링크&lt;/a&gt;를 같이 보내주었길래 들어가보았다.&lt;/p&gt;

&lt;p class=&quot;figure&quot;&gt;&lt;img src=&quot;/assets/img/190319/%EB%A9%94%EC%9D%BC.png&quot; alt=&quot;4&quot; /&gt;
구글에서 알려준 링크.&lt;/p&gt;

&lt;p&gt;페이지에 들어가보면 알겠지만, 이번에 소개할 페이지는, 지스윗 상태 대시보드라고는 하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;G Suite를 사용하는 기업용 서비스뿐만 아니라 일반 서비스에도 적용됩니다.&quot;&lt;/code&gt;라고 페이지 메인에도 나와있으니, 지스윗을 사용하지 않고 있고 개인 계정을 이용하고 있더라도 뭔가 이상한것 같으면 해당 페이지를 들어가서 내가 이상한건지, 서버가 이상한건지 확인할 수 있겠다.&lt;/p&gt;

&lt;h1 id=&quot;소개&quot;&gt;소개&lt;/h1&gt;

&lt;p&gt;구글은 지스윗 고객들을 위해 &lt;strong&gt;서버 상태&lt;/strong&gt;를 한눈에 보여주는 대시보드를 확인할 수 있는 페이지를 제공하고 있다.&lt;/p&gt;

&lt;p&gt;해당 페이지에서는 지메일부터 지도, 드라이브, 구글닥스, 지스윗 관리콘솔까지 구글에서 제공하는 모든 서비스들이 현재 제대로 작동중인지 한번에 확인할 수 있다.&lt;/p&gt;

&lt;p class=&quot;figure&quot;&gt;&lt;img src=&quot;/assets/img/190319/1.png&quot; alt=&quot;1&quot; /&gt;
구글에서 제공하는 서비스의 서버들의 현 이슈들을 한번에 확인할 수 있다.&lt;/p&gt;

&lt;p class=&quot;figure&quot;&gt;&lt;img src=&quot;/assets/img/190319/2.png&quot; alt=&quot;2&quot; /&gt;
표 안의 동그란 빨간 버튼을 클릭하면 해당 이슈 해결을 위한 진행상황을 확인할 수 있다.&lt;/p&gt;

&lt;p class=&quot;figure&quot;&gt;&lt;img src=&quot;/assets/img/190319/3.png&quot; alt=&quot;3&quot; /&gt;
영문 페이지 라고 적혀있는 링크를 들어가보면 영문으로 좀더 자세한 진행상황을 확인할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p class=&quot;message&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://www.google.com/appsstatus/rss/ko&lt;/code&gt; 이 주소를 통해 rss피드도 제공해주고 있다.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>황효진</name><email>hhjin1814@gmail.com</email></author><category term="GCP" /><summary type="html">G Suite 상태 대시보드 페이지 개요 우리 사무실은 지스윗 서비스를 통해 구글 서버에서 아웃룩 앱으로 메일을 받고 있다. 그런데 어느날 출근해보니 imap 메일서버로 로그인이 안되고, 메일도 보내고 받을 수 없는 상태길래 이런방법 저런방법으로 고치려고 노력해보다 안되서 구글에 연락해 보았다. 굉장히 오랜 시간동안 수신음을 기다려서(다른 사무실에서도 같은 문제로 고통받는 사람들이 많았나보다…) 서비스직원과 통화를 해서 듣기로는, 구글 서버쪽에서의 문제라고 안내받았다. 해결이 되면 바로 메일로 연락준다는 안내와 함께 전화를 끊고, 문의 생성 메일을 확인해보니 어떤 링크를 같이 보내주었길래 들어가보았다. 구글에서 알려준 링크. 페이지에 들어가보면 알겠지만, 이번에 소개할 페이지는, 지스윗 상태 대시보드라고는 하지만 &quot;G Suite를 사용하는 기업용 서비스뿐만 아니라 일반 서비스에도 적용됩니다.&quot;라고 페이지 메인에도 나와있으니, 지스윗을 사용하지 않고 있고 개인 계정을 이용하고 있더라도 뭔가 이상한것 같으면 해당 페이지를 들어가서 내가 이상한건지, 서버가 이상한건지 확인할 수 있겠다. 소개 구글은 지스윗 고객들을 위해 서버 상태를 한눈에 보여주는 대시보드를 확인할 수 있는 페이지를 제공하고 있다. 해당 페이지에서는 지메일부터 지도, 드라이브, 구글닥스, 지스윗 관리콘솔까지 구글에서 제공하는 모든 서비스들이 현재 제대로 작동중인지 한번에 확인할 수 있다. 구글에서 제공하는 서비스의 서버들의 현 이슈들을 한번에 확인할 수 있다. 표 안의 동그란 빨간 버튼을 클릭하면 해당 이슈 해결을 위한 진행상황을 확인할 수 있다. 영문 페이지 라고 적혀있는 링크를 들어가보면 영문으로 좀더 자세한 진행상황을 확인할 수 있다. https://www.google.com/appsstatus/rss/ko 이 주소를 통해 rss피드도 제공해주고 있다.</summary></entry><entry><title type="html">python 개발환경, jupyter notebook 소개/설치/실행.</title><link href="http://0.0.0.0:4000/2019/03/13/python.html" rel="alternate" type="text/html" title="python 개발환경, jupyter notebook 소개/설치/실행." /><published>2019-03-13T00:00:00+09:00</published><updated>2019-03-13T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2019/03/13/python</id><content type="html" xml:base="http://0.0.0.0:4000/2019/03/13/python.html">&lt;p&gt;&lt;a href=&quot;https://github.com/jupyter/notebook&quot;&gt;Jupyter Notebook github 링크&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;소개&quot;&gt;소개&lt;/h1&gt;
&lt;p&gt;파이썬은 &lt;strong&gt;인터프리터 언어&lt;/strong&gt;로써, ios의 &lt;strong&gt;터미널&lt;/strong&gt;이나 윈도우의 &lt;strong&gt;CMD&lt;/strong&gt;와 같은 커맨드 라인 창에서, 명령어를 이용해 실시간으로 작동하는 프로그래밍 언어입니다.&lt;/p&gt;

&lt;p&gt;하지만 이런 특성을 이용하지 않는다면 &lt;strong&gt;파이썬&lt;/strong&gt; 은 &lt;strong&gt;C&lt;/strong&gt; 와 같은 컴파일 언어처럼 &lt;strong&gt;IDE&lt;/strong&gt; 또는 &lt;strong&gt;텍스트 편집기&lt;/strong&gt;를 이용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;파일명&amp;gt;.py&lt;/code&gt; 파일을 만들어서 저장하고, 일일히 &lt;strong&gt;커멘드 라인&lt;/strong&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;python &amp;lt;파일명&amp;gt;.py&lt;/code&gt; 와 같은 명령어를 이용해 테스트하며 개발합니다.&lt;/p&gt;

&lt;p&gt;하지만 파이썬은 인터프리터 언어이기 때문에, 이런 특성을 이용한 &lt;strong&gt;jupyter notebook&lt;/strong&gt; 을 이용해서 코딩을 한다면 에러가 없는지 테스트를 하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;python &amp;lt;파일명&amp;gt;.py&lt;/code&gt; 과 같은 명령어를 입력하기 위해 일일히 커맨드창을 켤 일이 없습니다.&lt;/p&gt;

&lt;p class=&quot;figure&quot;&gt;&lt;img src=&quot;/assets/img/190313/cmd.png&quot; alt=&quot;1&quot; /&gt;
파이썬은 인터프리터 언어이다.&lt;/p&gt;

&lt;h1 id=&quot;설치&quot;&gt;설치&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;pip&lt;/strong&gt; 명령어를 이용해서 &lt;strong&gt;파이썬&lt;/strong&gt;에 &lt;strong&gt;notebook&lt;/strong&gt; 라이브러리를 설치합니다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pip install notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;jupyter 명령어를 이용해서 notebook을 실행합니다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ jupyter notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;cd 명령어 등을 이용해서 원하는 폴더에서 notebook을 실행할 수도 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~$ cd &amp;lt;폴더경로&amp;gt;
&amp;lt;폴더경로&amp;gt;$ jupyter notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;figure&quot;&gt;&lt;img src=&quot;/assets/img/190313/notebook-%EC%B2%AB_%EC%8B%A4%ED%96%89.png&quot; alt=&quot;2&quot; /&gt;
첫 실행화면. / jupyter notebook을 원하는 폴더에서 실행할 수 있다.&lt;/p&gt;

&lt;p&gt;위 화면에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;[new &amp;gt; python2.7] OR [new &amp;gt; python3]&lt;/code&gt; 버튼을 클릭해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Untitle1.ipynv&lt;/code&gt; 파일을 생성과 동시에 실행할 수 있습니다. 이렇게 &lt;strong&gt;jupyter notebook&lt;/strong&gt; 개발환경을 통해 새로 만든 파일에 들어가면 실시간으로 코딩과 실행을 동시해 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/190313/notebook-%EC%9E%91%EB%8F%99%EC%98%88%EC%8B%9C.png&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그림처럼 다시 작성해야하는 번거로움이 있는 커맨드 라인 혹은 .py파일을 만드는 파이썬 코딩과 달리 &lt;strong&gt;jupyter notebook&lt;/strong&gt; 에서는 계속해서 코드를 실행시키고 싶을 때 마다 이전에 사용했던 코드를 손쉽게 다시 사용할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p class=&quot;message&quot;&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: 요세미티 이상의 맥os 유저의 경우 설치 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ jupyter notebook&lt;/code&gt; 명령어를 통해 실행할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;ImportError: cannot import name _thread&lt;/code&gt; 와 같은 오류가 발생할 수 있습니다. 그럴 경우 &lt;em&gt;dateutil&lt;/em&gt; 라이브러리를 2.2 버전으로 &lt;strong&gt;재설치&lt;/strong&gt;하는 것 으로 이 문제를 해결할 수 있습니다.&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo pip uninstall python-dateutil
sudo pip install python-dateutil==2.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;</content><author><name>황효진</name><email>hhjin1814@gmail.com</email></author><category term="python" /><summary type="html">Jupyter Notebook github 링크 소개 파이썬은 인터프리터 언어로써, ios의 터미널이나 윈도우의 CMD와 같은 커맨드 라인 창에서, 명령어를 이용해 실시간으로 작동하는 프로그래밍 언어입니다. 하지만 이런 특성을 이용하지 않는다면 파이썬 은 C 와 같은 컴파일 언어처럼 IDE 또는 텍스트 편집기를 이용해서 &amp;lt;파일명&amp;gt;.py 파일을 만들어서 저장하고, 일일히 커멘드 라인에서 python &amp;lt;파일명&amp;gt;.py 와 같은 명령어를 이용해 테스트하며 개발합니다. 하지만 파이썬은 인터프리터 언어이기 때문에, 이런 특성을 이용한 jupyter notebook 을 이용해서 코딩을 한다면 에러가 없는지 테스트를 하기 위해 python &amp;lt;파일명&amp;gt;.py 과 같은 명령어를 입력하기 위해 일일히 커맨드창을 켤 일이 없습니다. 파이썬은 인터프리터 언어이다. 설치 pip 명령어를 이용해서 파이썬에 notebook 라이브러리를 설치합니다. $ pip install notebook jupyter 명령어를 이용해서 notebook을 실행합니다. $ jupyter notebook cd 명령어 등을 이용해서 원하는 폴더에서 notebook을 실행할 수도 있습니다. ~$ cd &amp;lt;폴더경로&amp;gt; &amp;lt;폴더경로&amp;gt;$ jupyter notebook 첫 실행화면. / jupyter notebook을 원하는 폴더에서 실행할 수 있다. 위 화면에서 [new &amp;gt; python2.7] OR [new &amp;gt; python3] 버튼을 클릭해서 Untitle1.ipynv 파일을 생성과 동시에 실행할 수 있습니다. 이렇게 jupyter notebook 개발환경을 통해 새로 만든 파일에 들어가면 실시간으로 코딩과 실행을 동시해 할 수 있습니다. 위 그림처럼 다시 작성해야하는 번거로움이 있는 커맨드 라인 혹은 .py파일을 만드는 파이썬 코딩과 달리 jupyter notebook 에서는 계속해서 코드를 실행시키고 싶을 때 마다 이전에 사용했던 코드를 손쉽게 다시 사용할 수 있습니다. NOTE: 요세미티 이상의 맥os 유저의 경우 설치 후 $ jupyter notebook 명령어를 통해 실행할 때 ImportError: cannot import name _thread 와 같은 오류가 발생할 수 있습니다. 그럴 경우 dateutil 라이브러리를 2.2 버전으로 재설치하는 것 으로 이 문제를 해결할 수 있습니다. sudo pip uninstall python-dateutil sudo pip install python-dateutil==2.2</summary></entry><entry><title type="html">Welcome</title><link href="http://0.0.0.0:4000/2018/07/01/welcome.html" rel="alternate" type="text/html" title="Welcome" /><published>2018-07-01T00:00:00+09:00</published><updated>2018-07-01T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2018/07/01/welcome</id><content type="html" xml:base="http://0.0.0.0:4000/2018/07/01/welcome.html">&lt;p&gt;If you see this page, that means you have setup your site. enjoy! :ghost: :ghost: :ghost:&lt;/p&gt;

&lt;p&gt;You may want to &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/en/configuration&quot;&gt;config the site&lt;/a&gt; or &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/en/writing-posts&quot;&gt;writing a post&lt;/a&gt; next. Please feel free to &lt;a href=&quot;https://github.com/kitian616/jekyll-TeXt-theme/issues&quot;&gt;create an issue&lt;/a&gt; or &lt;a href=&quot;mailto:kitian616@outlook.com&quot;&gt;send me email&lt;/a&gt; if you have any questions.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr /&gt;

&lt;p&gt;If you like TeXt, don’t forget to give me a star. :star2:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kitian616/jekyll-TeXt-theme/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/kitian616/jekyll-TeXt-theme.svg?label=Stars&amp;amp;style=social&quot; alt=&quot;Star This Project&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>황효진</name><email>hhjin1814@gmail.com</email></author><category term="TeXt" /><summary type="html">If you see this page, that means you have setup your site. enjoy! :ghost: :ghost: :ghost: You may want to config the site or writing a post next. Please feel free to create an issue or send me email if you have any questions.</summary></entry><entry><title type="html">Post with Header Image</title><link href="http://0.0.0.0:4000/2018/06/01/header-image.html" rel="alternate" type="text/html" title="Post with Header Image" /><published>2018-06-01T00:00:00+09:00</published><updated>2018-06-01T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2018/06/01/header-image</id><content type="html" xml:base="http://0.0.0.0:4000/2018/06/01/header-image.html">&lt;p&gt;A Post with Header Image, See &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/samples.html#page-layout&quot;&gt;Page layout&lt;/a&gt; for more examples.&lt;/p&gt;

&lt;!--more--&gt;</content><author><name>황효진</name><email>hhjin1814@gmail.com</email></author><category term="TeXt" /><summary type="html">A Post with Header Image, See Page layout for more examples.</summary></entry></feed>